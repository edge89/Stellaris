############################
#
# Fallen Empire Events
#
# Written by Martin Anward
#
############################

namespace = fallen_empires_tasks

# Patronizing Fallen Empire gives a gift
country_event = {
	id = fallen_empires_tasks.1
	title = OK
	desc = OK
	
	hide_window = yes
	
	trigger = {		
		is_country_type = default
		fleet_power < 30000	
		is_at_war = no
		
		any_country = {
			is_valid_fallen_empire_for_task = yes
			root = { NOT = { has_opinion_modifier = { who = prev modifier =  opinion_fallen_empire_gift } }	}
			NOT = { has_opinion_modifier = { who = root modifier = opinion_spurned_fallen_empire_gift } }
			is_patronizing_to = root
			has_communications = root				
		}
	}
	
	mean_time_to_happen = {
		years = 100		
		
		modifier = {
			factor = 0.01
			has_global_flag = fallen_empire_task_debug
		}
		
		modifier = {
			factor = 0.5
			any_country = {
				is_valid_fallen_empire_for_task = yes
				root = { NOT = { has_opinion_modifier = { who = prev modifier = opinion_fallen_empire_gift } }}
				NOT = { has_opinion_modifier = { who = root modifier = opinion_spurned_fallen_empire_gift } }
				is_patronizing_to = root
				has_communications = root	
				has_opinion_modifier = { who = root modifier = opinion_accepted_fallen_empire_request }		
			}
		}
		
		modifier = {
			factor = 0.25
			any_country = {
				is_valid_fallen_empire_for_task = yes
				root = { NOT = { has_opinion_modifier = { who = prev modifier = opinion_fallen_empire_gift } }}
				NOT = { has_opinion_modifier = { who = root modifier = opinion_spurned_fallen_empire_gift } }
				is_patronizing_to = root
				has_communications = root	
				has_opinion_modifier = { who = root modifier = opinion_completed_fallen_empire_task }			
			}
		}
		
		modifier = {
			factor = 0.75
			any_country = {
				is_valid_fallen_empire_for_task = yes
				root = { NOT = { has_opinion_modifier = { who = prev modifier = opinion_fallen_empire_gift } } }
				NOT = { has_opinion_modifier = { who = root modifier = opinion_spurned_fallen_empire_gift } }
				is_patronizing_to = root
				has_communications = root	
				opinion = { who = root value = 75 }
			}
		}
		
		modifier = {
			factor = 0.75
			any_country = {
				is_valid_fallen_empire_for_task = yes
				root = { NOT = { has_opinion_modifier = { who = prev modifier = opinion_fallen_empire_gift } }	}
				NOT = { has_opinion_modifier = { who = root modifier = opinion_spurned_fallen_empire_gift } }
				is_patronizing_to = root
				has_communications = root	
				opinion = { who = root value = 100 }
			}
		}
		
		modifier = {
			factor = 0.75
			any_country = {
				is_valid_fallen_empire_for_task = yes
				root = { NOT = { has_opinion_modifier = { who = prev modifier =  opinion_fallen_empire_gift } }	}
				NOT = { has_opinion_modifier = { who = root modifier = opinion_spurned_fallen_empire_gift } }
				is_patronizing_to = root
				has_communications = root	
				opinion = { who = root value = 150 }
			}
		}
		
		modifier = {
			factor = 0.75
			any_country = {
				is_valid_fallen_empire_for_task = yes
				root = { NOT = { has_opinion_modifier = { who = prev modifier =  opinion_fallen_empire_gift } }	}
				NOT = { has_opinion_modifier = { who = root modifier = opinion_spurned_fallen_empire_gift } }
				is_patronizing_to = root
				has_communications = root	
				opinion = { who = root value = 200 }
			}
		}
	}
	
	immediate = {
		random_country = {
			limit = { 
				is_valid_fallen_empire_for_task = yes
				root = { NOT = { has_opinion_modifier = { who = prev modifier =  opinion_fallen_empire_gift } }	}
				NOT = { has_opinion_modifier = { who = root modifier = opinion_spurned_fallen_empire_gift } }
				is_patronizing_to = root
				has_communications = root	
			}
			
			root = {
				random_list = {
					35 = { set_country_flag = fe_gift_resources_small }
					15 = { set_country_flag = fe_gift_resources_large }
					20 = { set_country_flag = fe_gift_databanks }
					15 = { set_country_flag = fe_gift_rare_tech }
					10 = { set_country_flag = fe_gift_escorts }
					5 = { set_country_flag = fe_gift_battlecruiser }
				}			
			}
			
			save_event_target_as = FallenEmpireTaskOrigin
			root = { add_opinion_modifier = { who = prev modifier = opinion_fallen_empire_gift } }
			root = { country_event = { id = fallen_empires_tasks.2 } }
		}
	}
}

country_event = {
	id = fallen_empires_tasks.2
	title = fallen_empires_tasks.2.name
	
	is_triggered_only = yes
	diplomatic = yes
	
	picture_event_data = {
		portrait = event_target:FallenEmpireTaskOrigin
		planet_background = event_target:FallenEmpireTaskOrigin
		graphical_culture = event_target:FallenEmpireTaskOrigin
		city_level = event_target:FallenEmpireTaskOrigin
		room = event_target:FallenEmpireTaskOrigin
	}
	
	desc = {
		text = fallen_empires_tasks.2.desc
		trigger = {
			NOR = {
				has_country_flag = fe_gift_resources_small
				has_country_flag = fe_gift_resources_large
				has_country_flag = fe_gift_databanks
				has_country_flag = fe_gift_rare_tech	
				has_country_flag = fe_gift_escorts
				has_country_flag = fe_gift_battlecruiser
			}
		}
	}		
	desc = {
		text = fallen_empires_tasks.2.desc.a.materialist
		trigger = {
			OR = {
				has_country_flag = fe_gift_resources_small
				has_country_flag = fe_gift_resources_large
			}
			event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_materialist }
		}
	}
	desc = {
		text = fallen_empires_tasks.2.desc.a.xenophile
		trigger = {
			OR = {
				has_country_flag = fe_gift_resources_small
				has_country_flag = fe_gift_resources_large
			}
			event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_xenophile }
		}
	}
	desc = {
		text = fallen_empires_tasks.2.desc.b.materialist
		trigger = {
			OR = {
				has_country_flag = fe_gift_databanks
				has_country_flag = fe_gift_rare_tech
			}
			event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_materialist }
		}
	}
	desc = {
		text = fallen_empires_tasks.2.desc.b.xenophile
		trigger = {
			OR = {
				has_country_flag = fe_gift_databanks
				has_country_flag = fe_gift_rare_tech
			}
			event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_xenophile }
		}
	}
	desc = {
		text = fallen_empires_tasks.2.desc.c.materialist
		trigger = {
			has_country_flag = fe_gift_escorts
			event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_materialist }
		}
	}
	desc = {
		text = fallen_empires_tasks.2.desc.c.xenophile
		trigger = {
			has_country_flag = fe_gift_escorts
			event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_xenophile }
		}
	}
	desc = {
		text = fallen_empires_tasks.2.desc.d.materialist
		trigger = {
			has_country_flag = fe_gift_battlecruiser
			event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_materialist }
		}
	}
	desc = {
		text = fallen_empires_tasks.2.desc.d.xenophile
		trigger = {
			has_country_flag = fe_gift_battlecruiser
			event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_xenophile }
		}
	}		
	
	option = {
		name = fallen_empires_tasks.2.a	
		if = {
			limit = { has_country_flag = fe_gift_resources_small }
			add_minerals = 1500
			add_energy = 500			
		}
		if = {
			limit = { has_country_flag = fe_gift_resources_large }	
			add_minerals = 3000
			add_energy = 1000			
		}
		if = {
			limit = { has_country_flag = fe_gift_databanks }		
			add_modifier = {
				modifier = fallen_empire_gift_databanks
				days = 3600
			}		
		}
		if = {
			limit = { has_country_flag = fe_gift_rare_tech }		
			if = {
				limit = {
					NOT = { has_technology = tech_orbital_sensor_array }
				}
				give_technology = tech_orbital_sensor_array
				remove_country_flag = fe_gift_rare_tech 
				break = yes
			}	
			if = {
				limit = {
					NOT = { has_technology = tech_planetary_shield_generator }
				}
				give_technology = tech_planetary_shield_generator
				remove_country_flag = fe_gift_rare_tech 
				break = yes
			}
			if = {
				limit = {
					NOT = { has_technology = tech_synchronized_defences }
				}
				give_technology = tech_synchronized_defences
				remove_country_flag = fe_gift_rare_tech 
				break = yes
			}
			if = {
				limit = {
					NOT = { has_technology = tech_selected_lineages }
				}
				give_technology = tech_selected_lineages
				remove_country_flag = fe_gift_rare_tech 
				break = yes
			}				
			if = {
				limit = {
					NOT = { has_technology = tech_hyperlane_mapping }
				}
				give_technology = tech_hyperlane_mapping
				remove_country_flag = fe_gift_rare_tech 
				break = yes
			}		
			if = {
				limit = {
					NOT = { has_technology = tech_space_defense_station_improvement }
				}
				give_technology = tech_space_defense_station_improvement
				remove_country_flag = fe_gift_rare_tech 
				break = yes
			}
			if = {
				limit = {
					NOT = { has_technology = tech_gene_banks }
				}
				give_technology = tech_gene_banks
				remove_country_flag = fe_gift_rare_tech 
				break = yes
			}				

			# Just give databanks instead
			add_modifier = {
				modifier = fallen_empire_gift_databanks
				days = 3600
			}			
		}	
		if = {
			limit = { has_country_flag = fe_gift_escorts }	
			custom_tooltip = fallen_empires_tasks.2.escorts_tooltip
			hidden_effect = {
				capital_scope = {
					create_fleet = {
						settings = {
							spawn_debris = no
						}						
						effect = {
							set_owner = ROOT							
							if = {
								limit = {
									event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_materialist }
									root = { has_technology = "tech_warp_drive_1" }
								}							
								create_ship = {
									name = "瑟普鲁斯 I"
									design = "Surplus Gamma I"
									graphical_culture = event_target:FallenEmpireTaskOrigin
								}
								create_ship = {
									name = "瑟普鲁斯 II"
									design = "Surplus Gamma I"
									graphical_culture = event_target:FallenEmpireTaskOrigin
								}
								create_ship = {
									name = "瑟普鲁斯 III"
									design = "Surplus Gamma I"
									graphical_culture = event_target:FallenEmpireTaskOrigin
								}							
							}
							if = {
								limit = {
									event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_materialist }
									root = { 
										NOT = { has_technology = "tech_warp_drive_1" }
										has_technology = "tech_hyper_drive_1" 
									}
								}							
								create_ship = {
									name = "瑟普鲁斯 I"
									design = "Surplus Gamma II"
									graphical_culture = event_target:FallenEmpireTaskOrigin
								}
								create_ship = {
									name = "瑟普鲁斯 II"
									design = "Surplus Gamma II"
									graphical_culture = event_target:FallenEmpireTaskOrigin
								}
								create_ship = {
									name = "瑟普鲁斯 III"
									design = "Surplus Gamma II"
									graphical_culture = event_target:FallenEmpireTaskOrigin
								}							
							}
							if = {
								limit = {
									event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_materialist }
									root = { 
										NOT = { has_technology = "tech_warp_drive_1" }
										NOT = { has_technology = "tech_hyper_drive_1" }
										has_technology = "tech_wormhole_generation_1" 
									}
								}							
								create_ship = {
									name = "瑟普鲁斯 I"
									design = "Surplus Gamma III"
									graphical_culture = event_target:FallenEmpireTaskOrigin
								}
								create_ship = {
									name = "瑟普鲁斯 II"
									design = "Surplus Gamma III"
									graphical_culture = event_target:FallenEmpireTaskOrigin
								}
								create_ship = {
									name = "瑟普鲁斯 III"
									design = "Surplus Gamma III"
									graphical_culture = event_target:FallenEmpireTaskOrigin
								}							
							}							
							if = {
								limit = {
									event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_xenophile }
									root = { has_technology = "tech_warp_drive_1" }
								}					
								create_ship = {
									name = "瑟普鲁斯 I"
									design = "Surplus Warden I"
									graphical_culture = event_target:FallenEmpireTaskOrigin
								}
								create_ship = {
									name = "瑟普鲁斯 II"
									design = "Surplus Warden I"
									graphical_culture = event_target:FallenEmpireTaskOrigin
								}
								create_ship = {
									name = "瑟普鲁斯 III"
									design = "Surplus Warden I"
									graphical_culture = event_target:FallenEmpireTaskOrigin
								}							
							}
							if = {
								limit = {
									event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_xenophile }
									root = { 
										NOT = { has_technology = "tech_warp_drive_1" }
										has_technology = "tech_hyper_drive_1" 
									}
								}					
								create_ship = {
									name = "瑟普鲁斯 I"
									design = "Surplus Warden II"
									graphical_culture = event_target:FallenEmpireTaskOrigin
								}
								create_ship = {
									name = "瑟普鲁斯 II"
									design = "Surplus Warden II"
									graphical_culture = event_target:FallenEmpireTaskOrigin
								}
								create_ship = {
									name = "瑟普鲁斯 III"
									design = "Surplus Warden II"
									graphical_culture = event_target:FallenEmpireTaskOrigin
								}							
							}
							if = {
								limit = {
									event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_xenophile }
									root = { 
										NOT = { has_technology = "tech_warp_drive_1" }
										NOT = { has_technology = "tech_hyper_drive_1" }
										has_technology = "tech_wormhole_generation_1" 
									}
								}					
								create_ship = {
									name = "瑟普鲁斯 I"
									design = "Surplus Surplus Warden III"
									graphical_culture = event_target:FallenEmpireTaskOrigin
								}
								create_ship = {
									name = "瑟普鲁斯 II"
									design = "Surplus Warden III"
									graphical_culture = event_target:FallenEmpireTaskOrigin
								}
								create_ship = {
									name = "瑟普鲁斯 III"
									design = "Surplus Warden III"
									graphical_culture = event_target:FallenEmpireTaskOrigin
								}							
							}							
							add_modifier = {
								modifier = fe_gift_ship
								days = -1
							}							
							set_location = PREV
						}
					}
				}	
			}
		}
		if = {
			limit = { has_country_flag = fe_gift_battlecruiser }
			custom_tooltip = fallen_empires_tasks.2.battlecruiser_tooltip
			hidden_effect = {
				capital_scope = {
					create_fleet = {
						settings = {
							spawn_debris = no
						}						
						effect = {
							set_owner = ROOT						
							if = {
								limit = {
									event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_materialist }
									root = { 
										has_technology = "tech_warp_drive_1" 					
									}
								}								
								create_ship = {
									name = "普若格拉斯"
									design = "Surplus Beta I"
									graphical_culture = event_target:FallenEmpireTaskOrigin
								}					
							}
							if = {
								limit = {
									event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_materialist }
									root = { 
										NOT = { has_technology = "tech_warp_drive_1" }
										has_technology = "tech_hyper_drive_1" 
									}
								}								
								create_ship = {
									name = "普若格拉斯"
									design = "Surplus Beta II"
									graphical_culture = event_target:FallenEmpireTaskOrigin
								}					
							}
							if = {
								limit = {
									event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_materialist }
									root = { 
										NOT = { has_technology = "tech_warp_drive_1" }
										NOT = { has_technology = "tech_hyper_drive_1" }
										has_technology = "tech_wormhole_generation_1" 
									}
								}								
								create_ship = {
									name = "普若格拉斯"
									design = "Surplus Beta III"
									graphical_culture = event_target:FallenEmpireTaskOrigin
								}					
							}							
							if = {
								limit = {
									event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_xenophile }
									root = { 
										root = { has_technology = "tech_warp_drive_1" }
									}
								}							
								create_ship = {
									name = "比纳伯兰斯"
									design = "Surplus Custodian I"
									graphical_culture = event_target:FallenEmpireTaskOrigin
								}							
							}
							if = {
								limit = {
									event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_xenophile }
									root = { 
										NOT = { has_technology = "tech_warp_drive_1" }
										has_technology = "tech_hyper_drive_1" 									 
									}
								}							
								create_ship = {
									name = "比纳伯兰斯"
									design = "Surplus Custodian II"
									graphical_culture = event_target:FallenEmpireTaskOrigin
								}							
							}
							if = {
								limit = {
									event_target:FallenEmpireTaskOrigin = { has_ethic = ethic_fanatic_xenophile }
									root = { 
										NOT = { has_technology = "tech_warp_drive_1" }
										NOT = { has_technology = "tech_hyper_drive_1" }
										has_technology = "tech_wormhole_generation_1"
									}
								}							
								create_ship = {
									name = "比纳伯兰斯"
									design = "Surplus Custodian III"
									graphical_culture = event_target:FallenEmpireTaskOrigin
								}							
							}							
							add_modifier = {
								modifier = fe_gift_ship
								days = -1
							}
							set_location = PREV
						}
					}
				}
			}	
		}
		hidden_effect = { 
			remove_country_flag = fe_gift_escorts
			remove_country_flag = fe_gift_resources_small
			remove_country_flag = fe_gift_battlecruiser
			remove_country_flag = fe_gift_resources_large
			remove_country_flag = fe_gift_databanks
			remove_country_flag = fe_gift_rare_tech 
		}		
	}
	option = {
		name = fallen_empires_tasks.2.b
		ai_chance = { factor = 0 }
		hidden_effect = { event_target:FallenEmpireTaskOrigin = { add_opinion_modifier = { who = root modifier = opinion_spurned_fallen_empire_gift } }	}
		custom_tooltip = fallen_empire_unhappy_tooltip
		hidden_effect = { 
			remove_country_flag = fe_gift_escorts
			remove_country_flag = fe_gift_resources_small
			remove_country_flag = fe_gift_battlecruiser
			remove_country_flag = fe_gift_resources_large
			remove_country_flag = fe_gift_databanks
			remove_country_flag = fe_gift_rare_tech 
		}			
	}
}

# Xenophile Fallen Empire asks for a pop
country_event = {
	id = fallen_empires_tasks.3
	title = OK
	desc = OK
	
	hide_window = yes
	
	mean_time_to_happen = {
		years = 20
		modifier = {
			factor = 0.01
			has_global_flag = fallen_empire_task_debug
		}		
		modifier = {
			factor = 1.2
			num_pops > 100
		}		
		modifier = {
			factor = 1.2
			num_pops > 80
		}
		modifier = {
			factor = 1.2
			num_pops > 60
		}		
		modifier = {
			factor = 1.2
			num_pops > 40
		}
		modifier = {
			factor = 0.5
			num_pops < 30
		}			
		modifier = {
			factor = 0.5
			num_pops < 20
		}			
	}
	
	trigger = {		
		num_pops > 10
		is_country_type = default
		fleet_power < 30000	
		NOT = { has_country_flag = fe_xenophile_asked_pop }	
		is_at_war = no
		
		any_owned_planet = {
			num_pops > 1
			any_owned_pop = {
				is_same_species = root
			}
		}	
		
		any_country = {
			is_valid_fallen_empire_for_task = yes
			has_ethic = ethic_fanatic_xenophile
			OR = {
				is_patronizing_to = root
				is_dismissive_to = root
			}
			has_communications = root		
			any_owned_planet = {
				has_planet_flag = fe_the_preserve
				any_tile = {
					has_blocker = tb_xeno_preserve
				}
			}			
		}
	}
	
	immediate = {
		set_country_flag = fe_xenophile_asked_pop
	
		random_owned_planet = {
			limit = {
				num_pops > 1
				any_owned_pop = {
					is_same_species = root
				}
			}
			save_event_target_as = FallenEmpireTaskPlanet
		}	
	
		random_country = {
			limit = { 
				is_valid_fallen_empire_for_task = yes
				has_ethic = ethic_fanatic_xenophile
				OR = {
					is_patronizing_to = root
					is_dismissive_to = root
				}
				has_communications = root		
				any_owned_planet = {
					has_planet_flag = fe_the_preserve
					any_tile = {
						has_blocker = tb_xeno_preserve
					}
				}
			}
			
			save_event_target_as = FallenEmpireTaskOrigin
			root = { country_event = { id = fallen_empires_tasks.4 } }
		}
	}
}

country_event = {
	id = fallen_empires_tasks.4
	title = fallen_empires_tasks.4.name
	desc = fallen_empires_tasks.4.desc
	
	is_triggered_only = yes
	diplomatic = yes
	
	picture_event_data = {
		portrait = event_target:FallenEmpireTaskOrigin
		planet_background = event_target:FallenEmpireTaskOrigin
		graphical_culture = event_target:FallenEmpireTaskOrigin
		city_level = event_target:FallenEmpireTaskOrigin
		room = event_target:FallenEmpireTaskOrigin
	}
	
	option = {
		name = fallen_empires_tasks.4.a
		ai_chance = {
			factor = 90
			modifier = {
				factor = 2
				has_ethic = ethic_xenophile
			}			
			modifier = {
				factor = 10
				has_ethic = ethic_fanatic_xenophile
			}	
			modifier = {
				factor = 0.1
				has_ethic = ethic_individualist
			}
			modifier = {
				factor = 0.01
				has_ethic = ethic_fanatic_individualist
			}				
			modifier = {
				factor = 0.1
				has_ethic = ethic_xenophobe
			}
			modifier = {
				factor = 0.01
				has_ethic = ethic_fanatic_xenophobe
			}		
			modifier = {
				factor = 0.5
				fleet_power > 10000
			}
		}		
		
		custom_tooltip = fallen_empires_tasks.4.tooltip
		custom_tooltip = fallen_empire_happy_tooltip
		
		if = {
			limit = {
				OR = {
					has_ethic = ethic_xenophobe
					has_ethic = ethic_fanatic_xenophobe
				}				
			}
			add_modifier = { modifier = gave_up_pop_xenophobe days = 3600 }
		}		
		if = {
			limit = {
				OR = {
					has_ethic = ethic_xenophile
					has_ethic = ethic_fanatic_xenophile
				}				
			}
			add_modifier = { modifier = gave_up_pop_xenophile days = 3600 }
		}		
		if = {
			limit = {
				NOR = {
					has_ethic = ethic_xenophobe
					has_ethic = ethic_fanatic_xenophobe
					has_ethic = ethic_xenophile
					has_ethic = ethic_fanatic_xenophile					
				}				
			}
			add_modifier = { modifier = gave_up_pop days = 3600 }
		}		
						
		hidden_effect = {
			event_target:FallenEmpireTaskPlanet = {
				random_pop = {
					limit = { is_same_species = root }
					kill_pop = yes
				}
			}		
			event_target:FallenEmpireTaskOrigin = { add_opinion_modifier = { who = root modifier = opinion_accepted_fallen_empire_request } }	
			event_target:FallenEmpireTaskOrigin = {
				random_owned_planet = {
					limit = {
						has_planet_flag = fe_the_preserve
						any_tile = {
							has_blocker = tb_xeno_preserve
						}				
					}
					random_tile = {
						limit = { has_blocker = yes }
						remove_blocker = yes
						create_pop = { 
							species = root
							ethos = root
						}	
						set_building = "building_fe_xeno_zoo"
					}
				}
			}
		}
	}
	
	option = {
		name = fallen_empires_tasks.4.b
		trigger = {
			OR = {
				has_ethic = ethic_xenophobe
				has_ethic = ethic_fanatic_xenophobe
			}
		}
		ai_chance = {
			factor = 10
		}		
		custom_tooltip = fallen_empire_unhappy_tooltip
		hidden_effect = { event_target:FallenEmpireTaskOrigin = { add_opinion_modifier = { who = root modifier = opinion_refused_fallen_empire_request } } }
	}
	option = {
		name = fallen_empires_tasks.4.c
		trigger = {
			OR = {
				has_ethic = ethic_individualist
				has_ethic = ethic_fanatic_individualist
			}
		}
		ai_chance = {
			factor = 10
		}		
		custom_tooltip = fallen_empire_unhappy_tooltip
		hidden_effect = { event_target:FallenEmpireTaskOrigin = { add_opinion_modifier = { who = root modifier = opinion_refused_fallen_empire_request } } }
	}
	option = {
		name = fallen_empires_tasks.4.d
		trigger = {
			OR = {
				has_ethic = ethic_collectivist
				has_ethic = ethic_fanatic_collectivist
			}
		}
		ai_chance = {
			factor = 10
		}		
		custom_tooltip = fallen_empire_unhappy_tooltip
		hidden_effect = { event_target:FallenEmpireTaskOrigin = { add_opinion_modifier = { who = root modifier = opinion_refused_fallen_empire_request } } }
	}	
	option = {
		name = fallen_empires_tasks.4.e
		trigger = {
			NOR = {
				has_ethic = ethic_xenophobe
				has_ethic = ethic_fanatic_xenophobe			
				has_ethic = ethic_individualist
				has_ethic = ethic_fanatic_individualist
				has_ethic = ethic_collectivist
				has_ethic = ethic_fanatic_collectivist				
			}
		}
		ai_chance = {
			factor = 10
		}		
		custom_tooltip = fallen_empire_unhappy_tooltip
		hidden_effect = { event_target:FallenEmpireTaskOrigin = { add_opinion_modifier = { who = root modifier = opinion_refused_fallen_empire_request } } }
	}
}

# Clear the xeno preserves if taken by another empire or if we awaken
country_event = {
	id = fallen_empires_tasks.5
	title = OK
	desc = OK
	
	hide_window = yes
	
	mean_time_to_happen = {
		days = 1
	}
	
	trigger = {
		OR = {	
			NOT = { is_country_type = fallen_empire }
			NOT = { has_ethic = ethic_fanatic_xenophile }
		}
		any_owned_planet = {
			has_planet_flag = fe_the_preserve
			any_tile = {
				has_blocker = tb_xeno_preserve
			}
		}
	}
	
	immediate = {
		every_owned_planet = {
			limit = { has_planet_flag = fe_the_preserve }
			every_tile = {
				limit = { has_blocker = tb_xeno_preserve }
				remove_blocker = yes
			}		
		}
	}
}

# Xenophile Fallen Empire asks an empire to stop another empire from purging
country_event = {
	id = fallen_empires_tasks.7
	title = OK
	desc = OK
	
	hide_window = yes
	
	mean_time_to_happen = {
		years = 200
		modifier = {
			factor = 0.01
			has_global_flag = fallen_empire_task_debug
		}		
		modifier = {
			factor = 2.0
			OR = {
				has_ethic = ethic_collectivist
				has_ethic = ethic_fanatic_collectivist
				has_ethic = ethic_xenophobe
				has_ethic = ethic_fanatic_xenophobe
			}				
		}
		modifier = {
			factor = 0.5
			OR = {
				has_ethic = ethic_individualist
				has_ethic = ethic_fanatic_individualist
				has_ethic = ethic_xenophile
				has_ethic = ethic_fanatic_xenophile
			}				
		}		
	}
	
	trigger = {		
		is_ai = no
		is_country_type = default	
		NOT = { has_country_flag = fe_task_given }
		NOT = { has_global_flag = fe_task_stop_atrocity_active }	
		is_at_war = no
		
		NOT = { has_policy_flag = no_wars }

		has_policy_flag = slavery_not_allowed
		has_policy_flag = purge_not_allowed	
		
		any_country = {
			is_valid_fallen_empire_for_task = yes
			has_ethic = ethic_fanatic_xenophile
			OR = {
				is_patronizing_to = root
				is_dismissive_to = root
			}
			has_communications = root		
			NOT = { has_opinion_modifier = { who = prev modifier = opinion_refused_fallen_empire_task } }
			NOT = { has_opinion_modifier = { who = prev modifier = opinion_failed_fallen_empire_task } }
			NOT = { has_opinion_modifier = { who = prev modifier = opinion_majorly_failed_fallen_empire_task } }
			
			any_country = {
				root = { is_rival = prev }
				NOT = { has_policy_flag = purge_not_allowed	}
				
				has_communications = prev
				root = { has_opinion_modifier = { who = prev modifier = opinion_genocidal } }
			}
		}
	}
	
	immediate = {
		set_country_flag = fe_task_given
	
		random_country = {
			limit = { 
				is_valid_fallen_empire_for_task = yes
				has_ethic = ethic_fanatic_xenophile
				OR = {
					is_patronizing_to = root
					is_dismissive_to = root
				}
				has_communications = root		
				NOT = { has_opinion_modifier = { who = prev modifier = opinion_refused_fallen_empire_task } }
				
				any_country = {
					root = { is_rival = prev }
					NOT = { has_policy_flag = purge_not_allowed	}
					
					has_communications = prev
					root = { has_opinion_modifier = { who = prev modifier = opinion_genocidal } }
				}
			}
			
			random_country = {	
				limit = {
					root = { is_rival = prev }
					NOT = { has_policy_flag = purge_not_allowed	}
					
					has_communications = prev
					root = { has_opinion_modifier = { who = prev modifier = opinion_genocidal } }				
				}
				
				save_event_target_as = FallenEmpireTaskTarget
			}			
			
			save_event_target_as = FallenEmpireTaskOrigin
			root = { country_event = { id = fallen_empires_tasks.8 } }
		}
	}
}

country_event = {
	id = fallen_empires_tasks.8
	title = fallen_empires_tasks.8.name
	desc = fallen_empires_tasks.8.desc
	
	is_triggered_only = yes
	diplomatic = yes
	
	picture_event_data = {
		portrait = event_target:FallenEmpireTaskOrigin
		planet_background = event_target:FallenEmpireTaskOrigin
		graphical_culture = event_target:FallenEmpireTaskOrigin
		city_level = event_target:FallenEmpireTaskOrigin
		room = event_target:FallenEmpireTaskOrigin
	}
	
	option = {
		name = fallen_empires_tasks.8.a
		ai_chance = {
			factor = 90
			modifier = {
				factor = 2
				has_ethic = ethic_xenophile
			}			
			modifier = {
				factor = 10
				has_ethic = ethic_fanatic_xenophile
			}	
			modifier = {
				factor = 2
				has_ethic = ethic_individualist
			}
			modifier = {
				factor = 10
				has_ethic = ethic_fanatic_individualist
			}				
			modifier = {
				factor = 0.1
				has_ethic = ethic_xenophobe
			}
			modifier = {
				factor = 0.01
				has_ethic = ethic_fanatic_xenophobe
			}		
		}		
		
		begin_event_chain = {
			event_chain = fe_stop_atrocity_task_chain
			target = root
		}
		
		hidden_effect = {
			set_global_flag = fe_task_stop_atrocity_active
			set_country_flag = fe_task_stop_atrocity
			set_timed_country_flag = { flag = fe_task_stop_atrocity_timer days = 7300 }
			event_target:FallenEmpireTaskOrigin = { set_country_flag = fe_task_stop_atrocity_origin }
			event_target:FallenEmpireTaskTarget = { set_country_flag = fe_task_stop_atrocity_target }
		}
		hidden_effect = { remove_country_flag = fe_task_given }
	}
	option = {
		name = fallen_empires_tasks.8.b
		ai_chance = {
			factor = 10
		}		
		custom_tooltip = fallen_empire_unhappy_tooltip
		hidden_effect = { event_target:FallenEmpireTaskOrigin = { add_opinion_modifier = { who = root modifier = opinion_refused_fallen_empire_task } } }
		hidden_effect = { remove_country_flag = fe_task_given }
	}
}

# Success
country_event = {
	id = fallen_empires_tasks.9
	title = fallen_empires_tasks.9.name
	desc = fallen_empires_tasks.9.desc
	
	is_triggered_only = yes
	
	immediate = {
		remove_global_flag = fe_task_stop_atrocity_active
		random_country = {
			limit = { has_country_flag = fe_task_stop_atrocity_origin }
			save_event_target_as = FallenEmpireTaskOrigin
		}
		random_country = {
			limit = { has_country_flag = fe_task_stop_atrocity_target }
			save_event_target_as = FallenEmpireTaskTarget
		}	
		end_event_chain = fe_stop_atrocity_task_chain
	}
	
	diplomatic = yes
	
	picture_event_data = {
		portrait = event_target:FallenEmpireTaskOrigin
		planet_background = event_target:FallenEmpireTaskOrigin
		graphical_culture = event_target:FallenEmpireTaskOrigin
		city_level = event_target:FallenEmpireTaskOrigin
		room = event_target:FallenEmpireTaskOrigin
	}
	
	option = {
		name = fallen_empires_tasks.9.a
		custom_tooltip = fallen_empire_happy_tooltip
		hidden_effect = { event_target:FallenEmpireTaskOrigin = { add_opinion_modifier = { who = root modifier = opinion_completed_fallen_empire_task } } }		
		hidden_effect = {
			every_country = {
				remove_country_flag = fe_task_stop_atrocity
				remove_country_flag = fe_task_stop_atrocity_origin
				remove_country_flag = fe_task_stop_atrocity_target
			}
		}
	}
}

# Failure - timer ran out
country_event = {
	id = fallen_empires_tasks.10
	title = fallen_empires_tasks.10.name
	desc = fallen_empires_tasks.10.desc
	
	trigger = {
		has_global_flag = fe_task_stop_atrocity_active
		has_country_flag = fe_task_stop_atrocity
		NOT = { has_country_flag = fe_task_stop_atrocity_timer }
		is_at_war = no
	}
	
	mean_time_to_happen = {
		months = 12
	}
	
	immediate = {
		remove_global_flag = fe_task_stop_atrocity_active
		random_country = {
			limit = { has_country_flag = fe_task_stop_atrocity_origin }
			save_event_target_as = FallenEmpireTaskOrigin
		}
		random_country = {
			limit = { has_country_flag = fe_task_stop_atrocity_target }
			save_event_target_as = FallenEmpireTaskTarget
		}	
		end_event_chain = fe_stop_atrocity_task_chain
	}
	
	diplomatic = yes
	
	picture_event_data = {
		portrait = event_target:FallenEmpireTaskOrigin
		planet_background = event_target:FallenEmpireTaskOrigin
		graphical_culture = event_target:FallenEmpireTaskOrigin
		city_level = event_target:FallenEmpireTaskOrigin
		room = event_target:FallenEmpireTaskOrigin
	}
	
	option = {
		name = fallen_empires_tasks.10.a
		custom_tooltip = fallen_empire_unhappy_tooltip
		hidden_effect = { event_target:FallenEmpireTaskOrigin = { add_opinion_modifier = { who = root modifier = opinion_refused_fallen_empire_task } } }		
		hidden_effect = {
			remove_global_flag = fe_task_stop_atrocity_active
			every_country = {
				remove_country_flag = fe_task_stop_atrocity
				remove_country_flag = fe_task_stop_atrocity_origin
				remove_country_flag = fe_task_stop_atrocity_target
			}
		}
	}
}

# Failure - they're no longer purging
country_event = {
	id = fallen_empires_tasks.11
	title = fallen_empires_tasks.11.name
	desc = fallen_empires_tasks.11.desc
	
	trigger = {
		has_global_flag = fe_task_stop_atrocity_active
		has_country_flag = fe_task_stop_atrocity
		any_country = {
			has_country_flag = fe_task_stop_atrocity_target
			has_policy_flag = purge_not_allowed
		}
	}
	
	mean_time_to_happen = {
		days = 1
	}
	
	immediate = {
		remove_global_flag = fe_task_stop_atrocity_active
		random_country = {
			limit = { has_country_flag = fe_task_stop_atrocity_origin }
			save_event_target_as = FallenEmpireTaskOrigin
		}
		random_country = {
			limit = { has_country_flag = fe_task_stop_atrocity_target }
			save_event_target_as = FallenEmpireTaskTarget
		}	
		end_event_chain = fe_stop_atrocity_task_chain
	}
	
	diplomatic = yes
	
	picture_event_data = {
		portrait = event_target:FallenEmpireTaskOrigin
		planet_background = event_target:FallenEmpireTaskOrigin
		graphical_culture = event_target:FallenEmpireTaskOrigin
		city_level = event_target:FallenEmpireTaskOrigin
		room = event_target:FallenEmpireTaskOrigin
	}
	
	option = {
		name = fallen_empires_tasks.11.a
		hidden_effect = {
			remove_global_flag = fe_task_stop_atrocity_active
			every_country = {
				remove_country_flag = fe_task_stop_atrocity
				remove_country_flag = fe_task_stop_atrocity_origin
				remove_country_flag = fe_task_stop_atrocity_target
			}
		}
	}
}

# Failure - a country involved is no longer valid
country_event = {
	id = fallen_empires_tasks.12	
	title = OK
	desc = OK
	
	hide_window = yes
	
	trigger = {
		has_global_flag = fe_task_stop_atrocity_active
		OR = {
			NOT = { any_country = { has_country_flag = fe_task_stop_atrocity } }
			NOT = { any_country = { has_country_flag = fe_task_stop_atrocity_origin } }
			NOT = { any_country = { has_country_flag = fe_task_stop_atrocity_target } }
		}
	}
	
	mean_time_to_happen = {
		days = 1
	}
	
	immediate = {
		remove_global_flag = fe_task_stop_atrocity_active
		hidden_effect = {
			remove_global_flag = fe_task_stop_atrocity_active
			every_country = {
				if = {
					limit = { has_country_flag = fe_task_stop_atrocity }
					end_event_chain = fe_stop_atrocity_task_chain
				}
				remove_country_flag = fe_task_stop_atrocity
				remove_country_flag = fe_task_stop_atrocity_origin
				remove_country_flag = fe_task_stop_atrocity_target
			}
		}
	}
}


# Failure - the country who got the task decided to start purging
country_event = {
	id = fallen_empires_tasks.13
	title = fallen_empires_tasks.13.name
	desc = fallen_empires_tasks.13.desc
	
	trigger = {
		has_global_flag = fe_task_stop_atrocity_active
		has_country_flag = fe_task_stop_atrocity
		OR = {
			has_policy_flag = purge_allowed_xenos_only			
			has_policy_flag = purge_allowed_all
		}
	}
	
	mean_time_to_happen = {
		days = 1
	}
	
	immediate = {
		remove_global_flag = fe_task_stop_atrocity_active
		random_country = {
			limit = { has_country_flag = fe_task_stop_atrocity_origin }
			save_event_target_as = FallenEmpireTaskOrigin
		}
		random_country = {
			limit = { has_country_flag = fe_task_stop_atrocity_target }
			save_event_target_as = FallenEmpireTaskTarget
		}	
		end_event_chain = fe_stop_atrocity_task_chain
	}
	
	diplomatic = yes
	
	picture_event_data = {
		portrait = event_target:FallenEmpireTaskOrigin
		planet_background = event_target:FallenEmpireTaskOrigin
		graphical_culture = event_target:FallenEmpireTaskOrigin
		city_level = event_target:FallenEmpireTaskOrigin
		room = event_target:FallenEmpireTaskOrigin
	}
	
	option = {
		name = fallen_empires_tasks.13.a
		custom_tooltip = fallen_empire_angry_tooltip
		hidden_effect = { event_target:FallenEmpireTaskOrigin = { add_opinion_modifier = { who = root modifier = opinion_majorly_failed_fallen_empire_task } } }			
		hidden_effect = {
			remove_global_flag = fe_task_stop_atrocity_active
			every_country = {
				remove_country_flag = fe_task_stop_atrocity
				remove_country_flag = fe_task_stop_atrocity_origin
				remove_country_flag = fe_task_stop_atrocity_target
			}
		}
	}
}

#Material Fallen Empire asks an empire to stop another empire from researching AI
country_event = {
	id = fallen_empires_tasks.14
	title = OK
	desc = OK
	
	hide_window = yes
	
	mean_time_to_happen = {
		years = 500	
		modifier = {
			factor = 0.01
			has_global_flag = fallen_empire_task_debug
		}		
		
		modifier = {
			factor = 2.0
			OR = {
				has_ethic = ethic_materialist
				has_ethic = ethic_fanatic_materialist
			}				
		}

		modifier = {
			factor = 0.5
			
			any_country = {
				root = { is_rival = prev }
				OR = {
					has_policy_flag = ai_full_rights
					has_policy_flag = ai_servitude
				}
				has_technology = tech_droid_workers
				has_communications = prev
			}			
		}
	
		modifier = {
			factor = 0.5
			
			any_country = {
				root = { is_rival = prev }
				OR = {
					has_policy_flag = ai_full_rights
					has_policy_flag = ai_servitude
				}
				has_technology = tech_synthetic_workers
				has_communications = prev
			}			
		}
	}
	
	trigger = {		
		is_ai = no
		is_country_type = default	
		NOT = { has_country_flag = fe_task_given }
		NOT = { has_global_flag = fe_task_stop_robots_active }	
		is_at_war = no
		
		NOT = { has_policy_flag = no_wars }

		NOR = {
			has_policy_flag = ai_full_rights
			has_policy_flag = ai_servitude
		}
		
		any_country = {
			is_valid_fallen_empire_for_task = yes
			has_ethic = ethic_fanatic_materialist
			OR = {
				is_patronizing_to = root
				is_dismissive_to = root
			}
			has_communications = root		
			NOT = { has_opinion_modifier = { who = prev modifier = opinion_refused_fallen_empire_task } }
			NOT = { has_opinion_modifier = { who = prev modifier = opinion_failed_fallen_empire_task } }
			NOT = { has_opinion_modifier = { who = prev modifier = opinion_majorly_failed_fallen_empire_task } }
			
			any_country = {
				root = { is_rival = prev }
				OR = {
					has_policy_flag = ai_full_rights
					has_policy_flag = ai_servitude
				}
				has_technology = tech_robotic_workers
				has_communications = prev
			}
		}
	}
	
	immediate = {
		set_country_flag = fe_task_given
	
		random_country = {
			limit = { 
				is_valid_fallen_empire_for_task = yes
				has_ethic = ethic_fanatic_materialist
				OR = {
					is_patronizing_to = root
					is_dismissive_to = root
				}
				has_communications = root		
				NOT = { has_opinion_modifier = { who = prev modifier = opinion_refused_fallen_empire_task } }
				
				any_country = {
					root = { is_rival = prev }
					OR = {
						has_policy_flag = ai_full_rights
						has_policy_flag = ai_servitude
					}
					has_technology = tech_robotic_workers
					has_communications = prev
				}
			}
			
			random_country = {	
				limit = {
					root = { is_rival = prev }
					OR = {
						has_policy_flag = ai_full_rights
						has_policy_flag = ai_servitude
					}
					has_technology = tech_synthetic_workers
					has_communications = prev			
				}
				
				set_global_flag = fe_robot_task_event_target_set
				save_event_target_as = FallenEmpireTaskTarget
			}

			random_country = {	
				limit = {
					NOT = { has_global_flag = fe_robot_task_event_target_set }
					root = { is_rival = prev }
					OR = {
						has_policy_flag = ai_full_rights
						has_policy_flag = ai_servitude
					}
					has_technology = tech_droid_workers
					has_communications = prev			
				}
				
				set_global_flag = fe_robot_task_event_target_set
				save_event_target_as = FallenEmpireTaskTarget
			}	

			random_country = {	
				limit = {
					NOT = { has_global_flag = fe_robot_task_event_target_set }
					root = { is_rival = prev }
					OR = {
						has_policy_flag = ai_full_rights
						has_policy_flag = ai_servitude
					}
					has_technology = tech_robotic_workers
					has_communications = prev			
				}
				
				set_global_flag = fe_robot_task_event_target_set
				save_event_target_as = FallenEmpireTaskTarget
			}				
			
			remove_global_flag = fe_robot_task_event_target_set
			save_event_target_as = FallenEmpireTaskOrigin
			root = { country_event = { id = fallen_empires_tasks.15 } }
		}
	}
}

country_event = {
	id = fallen_empires_tasks.15
	title = fallen_empires_tasks.15.name
	desc = fallen_empires_tasks.15.desc
	
	is_triggered_only = yes
	diplomatic = yes
	
	picture_event_data = {
		portrait = event_target:FallenEmpireTaskOrigin
		planet_background = event_target:FallenEmpireTaskOrigin
		graphical_culture = event_target:FallenEmpireTaskOrigin
		city_level = event_target:FallenEmpireTaskOrigin
		room = event_target:FallenEmpireTaskOrigin
	}
	
	option = {
		name = fallen_empires_tasks.15.a
		ai_chance = {
			factor = 90
			modifier = {
				factor = 2
				has_ethic = ethic_spiritualist
			}			
			modifier = {
				factor = 10
				has_ethic = ethic_fanatic_spiritualist
			}					
		}		
		
		begin_event_chain = {
			event_chain = fe_stop_robots_task_chain
			target = root
		}
		
		hidden_effect = {
			set_global_flag = fe_task_stop_robots_active
			set_country_flag = fe_task_stop_robots
			set_timed_country_flag = { flag = fe_task_stop_robots_timer days = 7300 }
			event_target:FallenEmpireTaskOrigin = { set_country_flag = fe_task_stop_robots_origin }
			event_target:FallenEmpireTaskTarget = { set_country_flag = fe_task_stop_robots_target }
		}
		hidden_effect = { remove_country_flag = fe_task_given }
	}
	option = {
		name = fallen_empires_tasks.15.b
		ai_chance = {
			factor = 10
		}		
		custom_tooltip = fallen_empire_unhappy_tooltip
		hidden_effect = { event_target:FallenEmpireTaskOrigin = { add_opinion_modifier = { who = root modifier = opinion_refused_fallen_empire_task } } }
		hidden_effect = { remove_country_flag = fe_task_given }
	}
}

# Success
country_event = {
	id = fallen_empires_tasks.16
	title = fallen_empires_tasks.16.name
	desc = fallen_empires_tasks.16.desc
	
	is_triggered_only = yes
	
	immediate = {
		remove_global_flag = fe_task_stop_robots_active
		random_country = {
			limit = { has_country_flag = fe_task_stop_robots_origin }
			save_event_target_as = FallenEmpireTaskOrigin
		}
		random_country = {
			limit = { has_country_flag = fe_task_stop_robots_target }
			save_event_target_as = FallenEmpireTaskTarget
		}	
		end_event_chain = fe_stop_robots_task_chain
	}
	
	diplomatic = yes
	
	picture_event_data = {
		portrait = event_target:FallenEmpireTaskOrigin
		planet_background = event_target:FallenEmpireTaskOrigin
		graphical_culture = event_target:FallenEmpireTaskOrigin
		city_level = event_target:FallenEmpireTaskOrigin
		room = event_target:FallenEmpireTaskOrigin
	}
	
	option = {
		name = fallen_empires_tasks.16.a
		custom_tooltip = fallen_empire_happy_tooltip
		hidden_effect = { event_target:FallenEmpireTaskOrigin = { add_opinion_modifier = { who = root modifier = opinion_completed_fallen_empire_task } } }		
		hidden_effect = {
			every_country = {
				remove_country_flag = fe_task_stop_robots
				remove_country_flag = fe_task_stop_robots_origin
				remove_country_flag = fe_task_stop_robots_target
			}
		}
	}
}

# Failure - timer ran out
country_event = {
	id = fallen_empires_tasks.17
	title = fallen_empires_tasks.17.name
	desc = fallen_empires_tasks.17.desc
	
	trigger = {
		has_global_flag = fe_task_stop_robots_active
		has_country_flag = fe_task_stop_robots
		NOT = { has_country_flag = fe_task_stop_robots_timer }
		is_at_war = no
	}
	
	mean_time_to_happen = {
		months = 12
	}
	
	immediate = {
		remove_global_flag = fe_task_stop_robots_active
		random_country = {
			limit = { has_country_flag = fe_task_stop_robots_origin }
			save_event_target_as = FallenEmpireTaskOrigin
		}
		random_country = {
			limit = { has_country_flag = fe_task_stop_robots_target }
			save_event_target_as = FallenEmpireTaskTarget
		}	
		end_event_chain = fe_stop_robots_task_chain
	}
	
	diplomatic = yes
	
	picture_event_data = {
		portrait = event_target:FallenEmpireTaskOrigin
		planet_background = event_target:FallenEmpireTaskOrigin
		graphical_culture = event_target:FallenEmpireTaskOrigin
		city_level = event_target:FallenEmpireTaskOrigin
		room = event_target:FallenEmpireTaskOrigin
	}
	
	option = {
		name = fallen_empires_tasks.17.a
		custom_tooltip = fallen_empire_unhappy_tooltip
		hidden_effect = { event_target:FallenEmpireTaskOrigin = { add_opinion_modifier = { who = root modifier = opinion_refused_fallen_empire_task } } }		
		hidden_effect = {
			remove_global_flag = fe_task_stop_robots_active
			every_country = {
				remove_country_flag = fe_task_stop_robots
				remove_country_flag = fe_task_stop_robots_origin
				remove_country_flag = fe_task_stop_robots_target
			}
		}
	}
}

# Failure - they're no longer roboting it up
country_event = {
	id = fallen_empires_tasks.18
	title = fallen_empires_tasks.18.name
	desc = fallen_empires_tasks.18.desc
	
	trigger = {
		has_global_flag = fe_task_stop_robots_active
		has_country_flag = fe_task_stop_robots
		any_country = {
			has_country_flag = fe_task_stop_robots_target
			has_policy_flag = ai_outlawed
		}
	}
	
	mean_time_to_happen = {
		days = 1
	}
	
	immediate = {
		remove_global_flag = fe_task_stop_robots_active
		random_country = {
			limit = { has_country_flag = fe_task_stop_robots_origin }
			save_event_target_as = FallenEmpireTaskOrigin
		}
		random_country = {
			limit = { has_country_flag = fe_task_stop_robots_target }
			save_event_target_as = FallenEmpireTaskTarget
		}	
		end_event_chain = fe_stop_robots_task_chain
	}
	
	diplomatic = yes
	
	picture_event_data = {
		portrait = event_target:FallenEmpireTaskOrigin
		planet_background = event_target:FallenEmpireTaskOrigin
		graphical_culture = event_target:FallenEmpireTaskOrigin
		city_level = event_target:FallenEmpireTaskOrigin
		room = event_target:FallenEmpireTaskOrigin
	}
	
	option = {
		name = fallen_empires_tasks.18.a
		hidden_effect = {
			remove_global_flag = fe_task_stop_robots_active
			every_country = {
				remove_country_flag = fe_task_stop_robots
				remove_country_flag = fe_task_stop_robots_origin
				remove_country_flag = fe_task_stop_robots_target
			}
		}
	}
}

# Failure - a country involved is no longer valid
country_event = {
	id = fallen_empires_tasks.19	
	title = OK
	desc = OK
	
	hide_window = yes
	
	trigger = {
		has_global_flag = fe_task_stop_robots_active
		OR = {
			NOT = { any_country = { has_country_flag = fe_task_stop_robots } }
			NOT = { any_country = { has_country_flag = fe_task_stop_robots_origin } }
			NOT = { any_country = { has_country_flag = fe_task_stop_robots_target } }
		}
	}
	
	mean_time_to_happen = {
		days = 1
	}
	
	immediate = {
		remove_global_flag = fe_task_stop_robots_active
		hidden_effect = {
			remove_global_flag = fe_task_stop_robots_active
			every_country = {
				if = {
					limit = { has_country_flag = fe_task_stop_robots }
					end_event_chain = fe_stop_robots_task_chain
				}
				remove_country_flag = fe_task_stop_robots
				remove_country_flag = fe_task_stop_robots_origin
				remove_country_flag = fe_task_stop_robots_target
			}
		}
	}
}

# Failure - the country who got the task decided to robot it up
country_event = {
	id = fallen_empires_tasks.20
	title = fallen_empires_tasks.20.name
	desc = fallen_empires_tasks.20.desc
	
	trigger = {
		has_global_flag = fe_task_stop_robots_active
		has_country_flag = fe_task_stop_robots
		OR = {
			has_policy_flag = ai_full_rights
			has_policy_flag = ai_servitude
		}
		has_technology = tech_robotic_workers
	}
	
	mean_time_to_happen = {
		days = 1
	}
	
	immediate = {
		remove_global_flag = fe_task_stop_robots_active
		random_country = {
			limit = { has_country_flag = fe_task_stop_robots_origin }
			save_event_target_as = FallenEmpireTaskOrigin
		}
		random_country = {
			limit = { has_country_flag = fe_task_stop_robots_target }
			save_event_target_as = FallenEmpireTaskTarget
		}	
		end_event_chain = fe_stop_robots_task_chain
	}
	
	diplomatic = yes
	
	picture_event_data = {
		portrait = event_target:FallenEmpireTaskOrigin
		planet_background = event_target:FallenEmpireTaskOrigin
		graphical_culture = event_target:FallenEmpireTaskOrigin
		city_level = event_target:FallenEmpireTaskOrigin
		room = event_target:FallenEmpireTaskOrigin
	}
	
	option = {
		name = fallen_empires_tasks.20.a
		custom_tooltip = fallen_empire_angry_tooltip
		hidden_effect = { event_target:FallenEmpireTaskOrigin = { add_opinion_modifier = { who = root modifier = opinion_majorly_failed_fallen_empire_task } } }			
		hidden_effect = {
			remove_global_flag = fe_task_stop_robots_active
			every_country = {
				remove_country_flag = fe_task_stop_robots
				remove_country_flag = fe_task_stop_robots_origin
				remove_country_flag = fe_task_stop_robots_target
			}
		}
	}
}

# Materialist Fallen Empire asks for scientist
country_event = {
	id = fallen_empires_tasks.21
	title = OK
	desc = OK
	
	hide_window = yes
	
	mean_time_to_happen = {
		years = 50	
		modifier = {
			factor = 0.01
			has_global_flag = fallen_empire_task_debug
		}		
	}
	
	trigger = {		
		num_pops > 10
		is_country_type = default
		fleet_power < 30000	
		NOT = { has_country_flag = fe_materialist_asked_scientist }	
		is_at_war = no
		
		any_owned_leader = {
			leader_class = scientist
			has_skill > 4
		}
		
		any_country = {
			is_valid_fallen_empire_for_task = yes
			has_ethic = ethic_fanatic_materialist
			OR = {
				is_patronizing_to = root
				is_dismissive_to = root
			}
			has_communications = root		
		}
	}
	
	immediate = {
		set_country_flag = fe_materialist_asked_scientist
	
		random_owned_leader ={
			limit = {
				leader_class = scientist
				has_skill > 4		
			}
			save_event_target_as = FallenEmpireScientistTarget
		}		
	
		random_country = {
			limit = { 
				is_valid_fallen_empire_for_task = yes
				has_ethic = ethic_fanatic_materialist
				OR = {
					is_patronizing_to = root
					is_dismissive_to = root
				}
				has_communications = root		
			}
			
			save_event_target_as = FallenEmpireTaskOrigin
			root = { country_event = { id = fallen_empires_tasks.22 } }
		}
	}
}

country_event = {
	id = fallen_empires_tasks.22
	title = fallen_empires_tasks.22.name
	desc = fallen_empires_tasks.22.desc
	
	is_triggered_only = yes
	diplomatic = yes
	
	picture_event_data = {
		portrait = event_target:FallenEmpireTaskOrigin
		planet_background = event_target:FallenEmpireTaskOrigin
		graphical_culture = event_target:FallenEmpireTaskOrigin
		city_level = event_target:FallenEmpireTaskOrigin
		room = event_target:FallenEmpireTaskOrigin
	}

	option = {
		name = fallen_empires_tasks.22.a
		ai_chance = {
			factor = 90
			modifier = {
				factor = 2
				has_ethic = ethic_xenophile
			}			
			modifier = {
				factor = 10
				has_ethic = ethic_fanatic_xenophile
			}	
			modifier = {
				factor = 0.1
				has_ethic = ethic_individualist
			}
			modifier = {
				factor = 0.01
				has_ethic = ethic_fanatic_individualist
			}				
			modifier = {
				factor = 0.1
				has_ethic = ethic_xenophobe
			}
			modifier = {
				factor = 0.01
				has_ethic = ethic_fanatic_xenophobe
			}		
			modifier = {
				factor = 0.5
				fleet_power > 10000
			}
		}
		
		custom_tooltip = fallen_empires_tasks.22.tooltip
		custom_tooltip = fallen_empire_happy_tooltip
		
		hidden_effect = {
			event_target:FallenEmpireTaskOrigin = { add_opinion_modifier = { who = root modifier = opinion_accepted_fallen_empire_request } }
			event_target:FallenEmpireScientistTarget = { 
				kill_leader = {
					show_notification = no
					type = scientist
				}			
			}
		}
	}
	
	option = {
		name = fallen_empires_tasks.22.b
		trigger = {
			OR = {
				has_ethic = ethic_xenophobe
				has_ethic = ethic_fanatic_xenophobe
			}
		}
		ai_chance = {
			factor = 10
		}		
		custom_tooltip = fallen_empire_unhappy_tooltip
		hidden_effect = { event_target:FallenEmpireTaskOrigin = { add_opinion_modifier = { who = root modifier = opinion_refused_fallen_empire_request } } }
	}
	option = {
		name = fallen_empires_tasks.22.c
		trigger = {
			OR = {
				has_ethic = ethic_individualist
				has_ethic = ethic_fanatic_individualist
			}
		}
		ai_chance = {
			factor = 10
		}		
		custom_tooltip = fallen_empire_unhappy_tooltip
		hidden_effect = { event_target:FallenEmpireTaskOrigin = { add_opinion_modifier = { who = root modifier = opinion_refused_fallen_empire_request } } }
	}
	option = {
		name = fallen_empires_tasks.22.d
		trigger = {
			OR = {
				has_ethic = ethic_materialist
				has_ethic = ethic_fanatic_materialist
			}
		}
		ai_chance = {
			factor = 10
		}		
		custom_tooltip = fallen_empire_unhappy_tooltip
		hidden_effect = { event_target:FallenEmpireTaskOrigin = { add_opinion_modifier = { who = root modifier = opinion_refused_fallen_empire_request } } }
	}	
	option = {
		name = fallen_empires_tasks.22.e
		trigger = {
			NOR = {
				has_ethic = ethic_xenophobe
				has_ethic = ethic_fanatic_xenophobe			
				has_ethic = ethic_individualist
				has_ethic = ethic_fanatic_individualist
				has_ethic = ethic_materialist
				has_ethic = ethic_fanatic_materialist
			}
		}
		ai_chance = {
			factor = 10
		}		
		custom_tooltip = fallen_empire_unhappy_tooltip
		hidden_effect = { event_target:FallenEmpireTaskOrigin = { add_opinion_modifier = { who = root modifier = opinion_refused_fallen_empire_request } } }
	}
}

# Xenophile Fallen Empire asks for brain scans found in anomaly
country_event = {
	id = fallen_empires_tasks.23
	title = OK
	desc = OK
	
	hide_window = yes
	
	mean_time_to_happen = {
		years = 10		
	}
	
	trigger = {		
		is_country_type = default
		NOT = { has_global_flag = fe_xenophile_asked_brain_scans }	
		is_at_war = no
		
		has_country_flag = limbo_downloaded
		
		any_country = {
			is_valid_fallen_empire_for_task = yes
			has_ethic = ethic_fanatic_xenophile
			OR = {
				is_patronizing_to = root
				is_dismissive_to = root
			}
			has_communications = root		
			any_owned_planet = {
				has_planet_flag = fe_the_preserve
				any_tile = {
					has_blocker = tb_xeno_preserve
				}
			}			
		}
	}
	
	immediate = {
		set_global_flag = fe_xenophile_asked_brain_scans
		
		create_species = {
			name = random
			class = random
			portrait = random
			traits = random
			allow_negative_traits = no
			extra_trait_points = 1			
		}	
		create_country = {
			name = "死灵"
			species = last_created_species
			type = faction
			effect = {
				save_event_target_as = FallenEmpireDeadSpecies
			}			
		}
	
		random_country = {
			limit = { 
				is_valid_fallen_empire_for_task = yes
				has_ethic = ethic_fanatic_xenophile
				OR = {
					is_patronizing_to = root
					is_dismissive_to = root
				}
				has_communications = root		
				any_owned_planet = {
					has_planet_flag = fe_the_preserve
					any_tile = {
						has_blocker = tb_xeno_preserve
					}
				}
			}		
			
			save_event_target_as = FallenEmpireTaskOrigin
			root = { country_event = { id = fallen_empires_tasks.24 } }
		}
	}
}

country_event = {
	id = fallen_empires_tasks.24
	title = fallen_empires_tasks.24.name
	desc = fallen_empires_tasks.24.desc
	
	is_triggered_only = yes
	diplomatic = yes
	
	picture_event_data = {
		portrait = event_target:FallenEmpireTaskOrigin
		planet_background = event_target:FallenEmpireTaskOrigin
		graphical_culture = event_target:FallenEmpireTaskOrigin
		city_level = event_target:FallenEmpireTaskOrigin
		room = event_target:FallenEmpireTaskOrigin
	}
	
	option = {
		name = fallen_empires_tasks.24.a
		ai_chance = {
			factor = 100
		}		
		
		custom_tooltip = fallen_empires_tasks.24.tooltip
		custom_tooltip = fallen_empire_happy_tooltip
				
		hidden_effect = {	
			event_target:FallenEmpireTaskOrigin = { add_opinion_modifier = { who = root modifier = opinion_accepted_fallen_empire_request } }	
			event_target:FallenEmpireTaskOrigin = {
				random_owned_planet = {
					limit = {
						has_planet_flag = fe_the_preserve
						any_tile = {
							has_blocker = tb_xeno_preserve
						}				
					}
					
					random_tile = {
						limit = { has_blocker = yes }
						remove_blocker = yes
						create_pop = { 
							species = event_target:FallenEmpireDeadSpecies
							ethos = random
						}	
						set_building = "building_fe_xeno_zoo"
					}
				}
			}
			event_target:FallenEmpireDeadSpecies = { destroy_country = yes }
		}
	}	
	option = {
		name = fallen_empires_tasks.24.b
		ai_chance = {
			factor = 10
		}		
		custom_tooltip = fallen_empire_unhappy_tooltip
		hidden_effect = { event_target:FallenEmpireTaskOrigin = { add_opinion_modifier = { who = root modifier = opinion_refused_fallen_empire_request } } }
		hidden_effect = { event_target:FallenEmpireDeadSpecies = { destroy_country = yes } }
	}
}